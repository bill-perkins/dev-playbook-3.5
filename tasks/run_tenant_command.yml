---
# file: run_tenant_command.yml

- block:

  - name: Set vars for onboarding or offboarding tenant
    set_fact:
      tenant_conf_file  : "{{ SASROOT }}/viya/config/tenant_{{ tenant_action }}_{{ DEPLOYMENT_ID }}.conf"
      sas_provider_endpoint_scheme: "{{ provider_endpoint_scheme | default('http') }}"
      sas_provider_endpoint_port: "{{ provider_endpoint_port | default('80') }}"
      sas_skip_ldap_config: "{{ skip_ldap_config | default('false') | bool | string | lower }}"
      sas_enable_tenant: "{{ enable_tenant | default('true') | bool | string | lower }}"
      sas_authorize_provider_admin: "{{ authorize_provider_admin | default('true')  | bool | string | lower }}"
      sas_tenant_url: "{{ tenant_url | default('') | string }}"
      sas_provider_url: "{{ provider_url | default('') | string }}"

  - name: Force sas_enable_tenant to false when sas_skip_ldap_config is true when onboarding
    set_fact:
      sas_enable_tenant: 'false'
    when: sas_skip_ldap_config == 'true' and tenant_action == 'onboard'

  - name: Create file
    file:
      path: "{{ tenant_conf_file   }}"
      state: touch
      mode: "0664"
      owner: "{{ tenant_admin }}"
      group: "{{ tenant_admin_group }}"

  - name: Add environment variables
    lineinfile:
      dest: "{{ tenant_conf_file   }}"
      regexp: "{{ item.regex }}"
      line: "{{ item.line}}"
    with_items:
      - { regex: "^\\s*export\\s+SASROOT\\s*=",                   line: "export SASROOT='{{ SASROOT }}'" }
      - { regex: "^\\s*export\\s+SASTENANT\\s*=",                 line: "export SASTENANT='{{ sas_tenant }}'" }
      - { regex: "^\\s*export\\s+SASPROVIDERADMIN\\s*=",          line: "export SASPROVIDERADMIN='{{ provider_admin }}'" }
      - { regex: "^\\s*export\\s+SASTENANTADMIN\\s*=",            line: "export SASTENANTADMIN='{{ tenant_admin }}'" }
      - { regex: "^\\s*export\\s+SASSKIPLDAPCONFIG\\s*=",         line: "export SASSKIPLDAPCONFIG='{{ sas_skip_ldap_config }}'" }
      - { regex: "^\\s*export\\s+SASENABLETENANT\\s*=",           line: "export SASENABLETENANT='{{ sas_enable_tenant }}'" }
      - { regex: "^\\s*export\\s+SASAUTHORIZEPROVIDERADMIN\\s*=", line: "export SASAUTHORIZEPROVIDERADMIN='{{ sas_authorize_provider_admin }}'" }
      - { regex: "^\\s*export\\s+PROVIDERENDPOINTSCHEME\\s*=",    line: "export PROVIDERENDPOINTSCHEME='{{ sas_provider_endpoint_scheme }}'" }
      - { regex: "^\\s*export\\s+PROVIDERENDPOINTHOST\\s*=",      line: "export PROVIDERENDPOINTHOST='{{ hostvars[groups['httpproxy'][0]]['sas_vars']['hostname_fqdn'] }}'" }
      - { regex: "^\\s*export\\s+PROVIDERENDPOINTPORT\\s*=",      line: "export PROVIDERENDPOINTPORT='{{ sas_provider_endpoint_port }}'" }
      - { regex: "^\\s*export\\s+TENANTURL\\s*=",                 line: "export TENANTURL='{{ sas_tenant_url }}'" }
      - { regex: "^\\s*export\\s+PROVIDERURL\\s*=",               line: "export PROVIDERURL='{{ sas_provider_url }}'" }

  - name: Run the script to perform an action on tenant
    command: "{{ tenant_action_command }} --file {{ tenant_conf_file   }}"
    environment:
      SAS_PROVIDER_ADMIN_PWD: '{{ provider_admin_pwd }}'
      SAS_PROVIDER_TENANT_PWD: '{{ tenant_provider_pwd | default("") }}'

  when: not ansible_check_mode
